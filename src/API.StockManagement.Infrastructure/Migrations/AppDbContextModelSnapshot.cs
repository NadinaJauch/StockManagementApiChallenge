// <auto-generated />
using System;
using API.StockManagement.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.StockManagement.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.StockManagement.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LoadDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(20, 2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "category1",
                            Description = "classic",
                            LoadDate = new DateTime(2024, 6, 27, 10, 25, 49, 870, DateTimeKind.Local).AddTicks(5040),
                            Price = 80m,
                            UpdateDate = new DateTime(2024, 6, 27, 10, 25, 49, 870, DateTimeKind.Local).AddTicks(5053)
                        },
                        new
                        {
                            Id = 2,
                            Category = "category1",
                            Description = "gold",
                            LoadDate = new DateTime(2024, 6, 27, 10, 25, 49, 870, DateTimeKind.Local).AddTicks(5057),
                            Price = 120m,
                            UpdateDate = new DateTime(2024, 6, 27, 10, 25, 49, 870, DateTimeKind.Local).AddTicks(5058)
                        },
                        new
                        {
                            Id = 3,
                            Category = "category1",
                            Description = "black",
                            LoadDate = new DateTime(2024, 6, 27, 10, 25, 49, 870, DateTimeKind.Local).AddTicks(5060),
                            Price = 150m,
                            UpdateDate = new DateTime(2024, 6, 27, 10, 25, 49, 870, DateTimeKind.Local).AddTicks(5061)
                        },
                        new
                        {
                            Id = 4,
                            Category = "category2",
                            Description = "classic",
                            LoadDate = new DateTime(2024, 6, 27, 10, 25, 49, 870, DateTimeKind.Local).AddTicks(5063),
                            Price = 160m,
                            UpdateDate = new DateTime(2024, 6, 27, 10, 25, 49, 870, DateTimeKind.Local).AddTicks(5064)
                        },
                        new
                        {
                            Id = 5,
                            Category = "category2",
                            Description = "gold",
                            LoadDate = new DateTime(2024, 6, 27, 10, 25, 49, 870, DateTimeKind.Local).AddTicks(5066),
                            Price = 230m,
                            UpdateDate = new DateTime(2024, 6, 27, 10, 25, 49, 870, DateTimeKind.Local).AddTicks(5067)
                        },
                        new
                        {
                            Id = 6,
                            Category = "category2",
                            Description = "black",
                            LoadDate = new DateTime(2024, 6, 27, 10, 25, 49, 870, DateTimeKind.Local).AddTicks(5068),
                            Price = 360m,
                            UpdateDate = new DateTime(2024, 6, 27, 10, 25, 49, 870, DateTimeKind.Local).AddTicks(5069)
                        });
                });

            modelBuilder.Entity("API.StockManagement.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleDescription = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            RoleDescription = "StockManager"
                        },
                        new
                        {
                            Id = 3,
                            RoleDescription = "Customer"
                        });
                });

            modelBuilder.Entity("API.StockManagement.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            RoleId = 1,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("API.StockManagement.Domain.Entities.User", b =>
                {
                    b.HasOne("API.StockManagement.Domain.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
